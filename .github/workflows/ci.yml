name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-train:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest
      
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        continue-on-error: true
      
      - name: Create models directory
        run: mkdir -p models
      
      - name: Quick training smoke test
        run: python train.py
      
      - name: Verify models exist
        run: |
          ls -lh models/
          test -f models/model_v01.joblib || exit 1
          test -f models/model_v02.joblib || exit 1
      
      - name: Run unit tests
        run: python -m pytest tests/ -v
      
      - name: Upload training artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trained-models
          path: models/*.joblib
          retention-days: 7

  docker-build-test:
    runs-on: ubuntu-latest
    needs: test-and-train
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download trained models
        uses: actions/download-artifact@v4
        with:
          name: trained-models
          path: models/
      
      - name: Build Docker image
        run: docker build -t diabetes-service:test .
      
      - name: Test Docker container
        run: |
          docker run -d -p 9696:9696 --name test_container diabetes-service:test
          sleep 5
          curl -f http://localhost:9696/health || exit 1
          curl -X POST http://localhost:9696/predict \
            -H "Content-Type: application/json" \
            -d '{"age": 0.02, "sex": -0.044, "bmi": 0.06, "bp": -0.03, "s1": -0.02, "s2": 0.03, "s3": -0.02, "s4": 0.02, "s5": 0.02, "s6": -0.001}' \
            || exit 1
          docker stop test_container
